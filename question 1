1)you are developing a smart home system that allows users to control lights, thermosats and door locks remotely . Design a system architecture ,including hardware componnents ,communication protocols and software components to achieve this functionality .
consider security and scalability .
Programming focus: MQTT, REST APIs ,database design ,device management. 


Implement a  python script that reads temperature and humidity data from a sensor ,stores it in a database,and send an alert to a user's phone if the temperature exceeds a certain threshold 
programming focus: pyhton ,sensors libraries ,database interaction (eg SQLite ,MySQL),mqtt
-----------------------------------------------------------------------------------------------------------------------------------------------


#sensor.py

import sqlite3
import random
import time
import paho.mqtt.publish as publish

conn = sqlite3.connect('database.db')
cursor = conn.cursor()
cursor.execute('''CREATE TABLE IF NOT EXISTS sensor_data (
    id INTEGER PRIMARY KEY,
    temperature REAL,
    humidity REAL,
    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP
)''')
conn.commit()

TEMP_THRESHOLD = 30

while True:
    temperature = round(random.uniform(25, 35), 2)
    humidity = round(random.uniform(40, 70), 2)

    print(f"Simulated Temp: {temperature}°C, Humidity: {humidity}%")

    
    cursor.execute("INSERT INTO sensor_data (temperature, humidity) VALUES (?, ?)", (temperature, humidity))
    conn.commit()

    if temperature > TEMP_THRESHOLD:
        publish.single("home/alert", f"ALERT: High Temp {temperature}°C", hostname="test.mosquitto.org")
        print("⚠️ ALERT SENT!")

    time.sleep(5) 


#mqtt.py

import paho.mqtt.client as mqtt

def on_message(client, userdata, msg):
    print(f"📲 Received Alert: {msg.payload.decode()}")

client = mqtt.Client()
client.connect("test.mosquitto.org", 1883, 60)
client.subscribe("home/alert")
client.on_message = on_message

client.loop_forever()
